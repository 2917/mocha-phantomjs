// Generated by CoffeeScript 1.3.3
(function() {

  describe('mocha-phantomjs', function() {
    var expect, spawn;
    expect = require('chai').expect;
    spawn = require('child_process').spawn;
    before(function() {
      return this.runner = function(done, args, callback) {
        var phantomjs, stderr, stdout;
        stdout = '';
        stderr = '';
        args.unshift('lib/mocha-phantomjs.coffee');
        phantomjs = spawn('phantomjs', args);
        phantomjs.stdout.on('data', function(data) {
          return stdout = stdout.concat(data.toString());
        });
        phantomjs.stderr.on('data', function(data) {
          return stderr = stderr.concat(data.toString());
        });
        return phantomjs.on('exit', function(code) {
          if (typeof callback === "function") {
            callback(code, stdout, stderr);
          }
          return typeof done === "function" ? done() : void 0;
        });
      };
    });
    it('shows usage when no args are given', function(done) {
      return this.runner(done, [], function(code, stdout, stderr) {
        expect(code).to.equal(1);
        return expect(stdout).to.match(/Usage:/);
      });
    });
    return it('foos', function() {
      return expect(true).to.be.ok;
    });
  });

}).call(this);
